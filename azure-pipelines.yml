# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'nlpaiarm'

  # Web app name
  webAppName: 'nlpaiservice'

  # projnameprefix
  projnameprefix: 'nlpai'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      vmImage: $(vmImageName)

    steps: 
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: $(projnameprefix)sc
        organization: 'genericorg-1'
        projectKey: $(projnameprefix)
        projectName: $(projnameprefix)
        scannerMode: 'Other'
        ######extraProperties: |
          ####sonar.coverage.jacoco.xmlReportPaths=CCReport43F6D5EF/jacoco.xml
        extraProperties: |
          sonar.host.url=https://sonarcloud.io
          sonar.projectKey=$(projnameprefix)
          sonar.organization=genericorg-1          
      
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean verify sonar:sonar package'
        #goals: 'package'
        options: '-Dmaven.test.failure.ignore=true'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        publishJUnitResults: true #updated from false to true
        testResultsFiles: '**/TEST-*.xml' #'**/TEST-*.xml'
        codeCoverageToolOption: 'JaCoCo'
        sonarCloudRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'
        
 
    - task: SonarCloudAnalyze@1
 
    - task: SonarCloudPublish@1
      displayName: 'Publish results on build summary'
      inputs:
        pollingTimeoutSec: '300'
 
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: Deploy Linux Web App
    environment: dev
      #name: dev
      #resourceType: VirtualMachine
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deployment'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              package: '$(Pipeline.Workspace)/drop/**/target/*.?(war|jar)'
